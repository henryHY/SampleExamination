{
  "name": "moment-duration-format",
  "version": "1.2.1",
  "description": "A moment.js plugin for formatting durations.",
  "main": "lib/moment-duration-format.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/jsmreese/moment-duration-format.git"
  },
  "authors": [
    "John Madhavan-Reese <jsmreese@pureshare.com> (http://pureshare.com/)"
  ],
  "keywords": [
    "moment",
    "duration",
    "format"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jsmreese/moment-duration-format/issues"
  },
  "homepage": "https://github.com/jsmreese/moment-duration-format",
  "readme": "#Moment Duration Format\n\n###Format plugin for the Moment Duration object.\n\nThis is a plugin to the Moment.js JavaScript date library to add comprehensive formatting to Moment Durations.\n\nFormat template grammar is patterned on the existing Moment Date format template grammar, with a few modifications because durations are fundamentally different from dates.\n\nThis plugin depends on <a href=\"http://lodash.com/\">Lo-Dash</a> or <a href=\"http://http://underscorejs.org//\">Underscore</a>, and is tested with both libraries.\n\n---\n\n### Installation\n\n##### Node.js\n`npm install moment-duration-format`\n\n##### Bower\n`bower install moment-duration-format`\n\n##### Browser\n`<script src=\"path/to/moment-duration-format.js\"></script>`\n\nBe sure to include moment.js and lodash.js or underscore.js on your page before loading this plugin.\n\n---\n\n### Usage\n\nThe format function may be called with three optional arguments:\n```\nmoment.duration.format([template] [, precision] [, settings])\n```\n\nBoth the `template` and `precision` arguments may be specified as part of a single `settings` object argument if desired.\n\nWithin the `template` string, moment-token characters will be replaced with the duration value for that type.\nMoment-tokens maybe be customized (see test cases for examples), but the default token map is:\n```\nyears:   Y or y\nmonths:  M\nweeks:   W or w\ndays:    D or d\nhours:   H or h\nminutes: m\nseconds: s\nms:      S\n```\n\n\nBasic usage:\n```\nmoment.duration(123, \"minutes\").format();\n// \"2:03:00\"\n\nmoment.duration(123, \"minutes\").format(\"h:mm\");\n// \"2:03\"\n\nmoment.duration(123, \"minutes\").format(\"h [hrs], m [min]\");\n// \"2 hrs, 3 min\"\n// escape moment-tokens using square brackets\n// this can be customized using `settings.escape`\n\nmoment.duration(123, \"minutes\").format(\"h [hrs]\", 2);\n// \"2.04 hrs\"\n// show arbitrary decimal precision with positive precision\n\nmoment.duration(123, \"minutes\").format(\"m [min]\", -1);\n// \"120 min\"\n// truncate the final value with negative precision\n\nmoment.duration(123, \"minutes\").format(\"d[d] h:mm:ss\");\n// \"2:03:00\"\n// automatically trim leading tokens that have no value\n\nmoment.duration(123, \"minutes\").format(\"[seconds:] s -- [minutes:] m -- [hours:] h -- [days:] d\", { trim: \"right\" });\n// \"seconds: 0 -- minutes: 3 -- hours: 2\"\n// or trim from the right\n\nmoment.duration(123, \"minutes\").format(\"d[d] h:mm:ss\", { trim: false });\n// \"0d 2:03:00\"\n// or don't trim at all\n```\n\nSee the test cases and the default options for more thorough option descriptions.",
  "readmeFilename": "README.md",
  "_id": "moment-duration-format@1.2.1",
  "dist": {
    "shasum": "a3d9664f962d55ef1d6c4ccacf025988d80118c8"
  },
  "_from": "moment-duration-format@",
  "_resolved": "https://registry.npmjs.org/moment-duration-format/-/moment-duration-format-1.2.1.tgz"
}
